#version 330 core
out vec4 FragColor;

in vec2 TexCoord;
uniform sampler2D uTexture;
uniform float uSharpness; // 0.0 → no sharpen, 1.0 → strong

void main()
{
    vec2 texelSize = 1.0 / vec2(textureSize(uTexture, 0));
    vec3 c = texture(uTexture, TexCoord).rgb;

    // simple 3x3 Laplacian kernel
    vec3 n  = texture(uTexture, TexCoord + vec2(0.0, -texelSize.y)).rgb;
    vec3 s  = texture(uTexture, TexCoord + vec2(0.0, texelSize.y)).rgb;
    vec3 e  = texture(uTexture, TexCoord + vec2(texelSize.x, 0.0)).rgb;
    vec3 w  = texture(uTexture, TexCoord + vec2(-texelSize.x, 0.0)).rgb;

    vec3 lap = (n + s + e + w - 4.0 * c);

    // RCAS: add scaled Laplacian back to color
    vec3 result = c - uSharpness * lap;

    FragColor = vec4(result, 1.0);
}
